// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Restaurante.IO.Data.Context;

namespace Restaurante.IO.Data.Migrations
{
    [DbContext(typeof(MeuDbContext))]
    partial class MeuDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Restaurante.IO.Business.Models.Atendente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TipoAtendente")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Atendentes");
                });

            modelBuilder.Entity("Restaurante.IO.Business.Models.LogginEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Escopo")
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("LogLevel")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("varchar(6000)");

                    b.HasKey("Id");

                    b.ToTable("Loggin");
                });

            modelBuilder.Entity("Restaurante.IO.Business.Models.Mesa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("LocalizacaoMesa")
                        .HasColumnType("int");

                    b.Property<int>("Lugares")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(4);

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Mesas");
                });

            modelBuilder.Entity("Restaurante.IO.Business.Models.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AtendenteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataHoraCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DataHoraEncerrado")
                        .HasColumnType("datetime");

                    b.Property<Guid>("MesaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AtendenteId");

                    b.HasIndex("MesaId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Restaurante.IO.Business.Models.PedidoPrato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Observacao")
                        .HasColumnType("varchar(1000)");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PratoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StatusProducao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("PratoId");

                    b.ToTable("PedidoPrato");
                });

            modelBuilder.Entity("Restaurante.IO.Business.Models.Prato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(800)");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<double>("Preco")
                        .HasColumnType("float");

                    b.Property<int>("TipoPrato")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Pratos");
                });

            modelBuilder.Entity("Restaurante.IO.Business.Models.Pedido", b =>
                {
                    b.HasOne("Restaurante.IO.Business.Models.Atendente", "Atendente")
                        .WithMany("Pedidos")
                        .HasForeignKey("AtendenteId")
                        .HasConstraintName("FK_Pedidos_Atendentes")
                        .IsRequired();

                    b.HasOne("Restaurante.IO.Business.Models.Mesa", "Mesa")
                        .WithMany("Pedidos")
                        .HasForeignKey("MesaId")
                        .HasConstraintName("FK_Pedidos_Mesas")
                        .IsRequired();
                });

            modelBuilder.Entity("Restaurante.IO.Business.Models.PedidoPrato", b =>
                {
                    b.HasOne("Restaurante.IO.Business.Models.Pedido", "Pedido")
                        .WithMany("PedidoPrato")
                        .HasForeignKey("PedidoId")
                        .HasConstraintName("FK_PedidoPrato_Pedidos")
                        .IsRequired();

                    b.HasOne("Restaurante.IO.Business.Models.Prato", "Prato")
                        .WithMany("PedidoPrato")
                        .HasForeignKey("PratoId")
                        .HasConstraintName("FK_PedidoPrato_Pratos")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
